"use strict";var Q=Object.create;var T=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var X=Object.getOwnPropertyNames;var Y=Object.getPrototypeOf,Z=Object.prototype.hasOwnProperty;var ee=(t,e)=>{for(var s in e)T(t,s,{get:e[s],enumerable:!0})},se=(t,e,s,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of X(e))!Z.call(t,o)&&o!==s&&T(t,o,{get:()=>e[o],enumerable:!(n=$(e,o))||n.enumerable});return t};var b=(t,e,s)=>(s=t!=null?Q(Y(t)):{},se(e||!t||!t.__esModule?T(s,"default",{value:t,enumerable:!0}):s,t));var K=b(require("cors")),_e=require("dotenv/config"),C=b(require("express"));var B=b(require("jsonwebtoken")),q=process.env.JWT_SECRET,te=(t,e,s)=>{let n=t.headers.authorization;if(!n){e.status(401).json({message:"Acesso negado: Cabe\xE7alho de autoriza\xE7\xE3o n\xE3o encontrado."});return}if(!n.startsWith("Bearer ")){e.status(401).json({message:"Formato do token inv\xE1lido. Certifique-se de que o token come\xE7a com 'Bearer '."});return}let o=n.split(" ")[1];if(!o){e.status(401).json({message:"Token n\xE3o fornecido. Certifique-se de que o token est\xE1 presente."});return}try{if(!q)throw new Error("JWT_SECRET n\xE3o est\xE1 definido no ambiente.");let d=B.default.verify(o,q);return t.userId=d.id,s()}catch{e.status(401).json({message:"Token inv\xE1lido ou expirado."});return}},U=te;var r=require("drizzle-orm"),W=b(require("express"));var le=require("dotenv/config"),F=require("drizzle-orm/node-postgres"),z=require("pg");var S={};ee(S,{alertTable:()=>l,sensorDataTable:()=>h,sensorTable:()=>a,userTable:()=>g});var u=require("drizzle-orm/pg-core"),g=(0,u.pgTable)("user",{userId:(0,u.serial)("user_id").primaryKey(),name:(0,u.varchar)("name",{length:255}),email:(0,u.varchar)("email",{length:255}).unique(),password:(0,u.varchar)("password",{length:255}),creationDate:(0,u.timestamp)("creation_date").defaultNow()}),a=(0,u.pgTable)("sensor",{sensorId:(0,u.serial)("sensor_id").primaryKey(),userId:(0,u.integer)("user_id").references(()=>g.userId),sensorName:(0,u.varchar)("sensor_name",{length:255}),location:(0,u.varchar)("location",{length:255}),installationDate:(0,u.timestamp)("installation_date"),webhookToken:(0,u.varchar)("weebhook_token",{length:255}).unique()},t=>({fkUser:(0,u.foreignKey)({columns:[t.userId],foreignColumns:[g.userId],name:"fk_user"})})),h=(0,u.pgTable)("sensor_data",{sensorDataId:(0,u.serial)("sensor_data_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>a.sensorId),soilHumidity:(0,u.real)("soil_humidity"),temperature:(0,u.real)("temperature"),condutivity:(0,u.real)("condutivity"),ph:(0,u.real)("ph"),nitrogen:(0,u.real)("nitrogen"),phosphorus:(0,u.real)("phosphorus"),potassium:(0,u.real)(" potassium"),dateTime:(0,u.timestamp)("date_time").defaultNow()},t=>({fkSensor:(0,u.foreignKey)({columns:[t.sensorId],foreignColumns:[a.sensorId],name:"fk_sensor"})})),l=(0,u.pgTable)("alert",{alertId:(0,u.serial)("alert_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>a.sensorId),message:(0,u.text)("message"),level:(0,u.varchar)("level",{length:50}),timestamp:(0,u.timestamp)("timestamp").defaultNow()},t=>({fkSensorAlert:(0,u.foreignKey)({columns:[t.sensorId],foreignColumns:[a.sensorId],name:"fk_sensor_alert"})}));if(!process.env.DB_HOST||!process.env.DB_USER||!process.env.DB_PASSWORD||!process.env.DB_NAME)throw new Error("Missing database environment variables");var re=new z.Pool({host:process.env.DB_HOST||"localhost",port:parseInt(process.env.DB_PORT||"5432"),user:process.env.DB_USER||"username",password:process.env.DB_PASSWORD||"password",database:process.env.DB_NAME||"dbname",ssl:process.env.NODE_ENV==="production"}),c=(0,F.drizzle)(re,{schema:S});var m=W.default.Router(),I="Erro no Servidor, tente novamente",oe="N\xE3o encontrado",_="Campos obrigat\xF3rios est\xE3o faltando",y="Sensor n\xE3o encontrado",x="Dado n\xE3o encontrado",p=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));m.put("/user",async(t,e)=>{try{let s=t.userId,{name:n,email:o}=t.body;return!s||!n||!o?e.status(400).json({message:_}):(await c.update(g).set({name:n,email:o}).where((0,r.eq)(g.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio atualizado com sucesso"}))}catch{return p(e,I)}});m.delete("/user",async(t,e)=>{try{let s=t.userId;return s?(await c.delete(g).where((0,r.eq)(g.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio deletado com sucesso"})):e.status(400).json({message:"userId n\xE3o encontrado"})}catch{return p(e,I)}});m.post("/sensors",async(t,e)=>{try{let{sensorName:s,location:n}=t.body,o=t.userId;return!o||!s||!n?e.status(400).json({message:_}):(await c.insert(a).values({userId:o,sensorName:s,location:n,installationDate:new Date}).execute(),e.status(201).json({message:"Sensor cadastrado com sucesso"}))}catch{return p(e,I)}});m.patch("/sensors/:sensorId/assign",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId;if(!n)return e.status(400).json({message:"userId n\xE3o encontrado"});if(isNaN(Number(s)))return e.status(400).json({message:"sensorId inv\xE1lido"});let[o]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,Number(s)),(0,r.isNull)(a.userId))).execute();return o?(await c.update(a).set({userId:n}).where((0,r.eq)(a.sensorId,Number(s))),e.status(200).json({message:"Sensor atribu\xEDdo ao usu\xE1rio com sucesso"})):e.status(404).json({message:"Sensor n\xE3o encontrado ou j\xE1 atribu\xEDdo a um usu\xE1rio"})}catch(s){return console.error(s),p(e,I)}});m.get("/sensors",async(t,e)=>{try{let s=t.userId,n=await c.select().from(a).where((0,r.eq)(a.userId,s)).execute();return n.length===0?e.status(404).json({message:oe}):e.status(200).json(n)}catch{return p(e,I)}});m.get("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[o]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();return o?e.status(200).json(o):e.status(404).json({message:y})}catch{return p(e,I)}});m.put("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{sensorName:o,location:d}=t.body;return!o||!d?e.status(400).json({message:"sensorName e location s\xE3o obrigat\xF3rios"}):(await c.update(a).set({sensorName:o,location:d}).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute()).rowCount===0?e.status(404).json({message:y}):e.status(200).json({message:"Sensor atualizado com sucesso"})}catch(s){return console.error(s),p(e,I)}});m.delete("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId;return(await c.delete(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute()).rowCount===0?e.status(404).json({message:y}):e.status(200).json({message:"Sensor deletado com sucesso"})}catch{return p(e,I)}});m.post("/sensors/:sensorId/data",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j}=t.body,[D]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();return D?(await c.insert(h).values({sensorId:s,soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j,dateTime:new Date}).execute(),e.status(201).json({message:"Dados do sensor adicionados com sucesso"})):e.status(404).json({message:y})}catch{return p(e,I)}});m.get("/sensors/:sensorId/data",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[o]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();if(!o)return e.status(404).json({message:y});let d=await c.select().from(h).where((0,r.eq)(h.sensorId,s)).execute();return d.length===0?e.status(404).json({message:x}):e.status(200).json(d)}catch{return p(e,I)}});m.get("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId,[d]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,o))).execute();if(!d)return e.status(404).json({message:y});let[i]=await c.select().from(h).where((0,r.and)((0,r.eq)(h.sensorDataId,n),(0,r.eq)(h.sensorId,s))).execute();return i?e.status(200).json(i):e.status(404).json({message:x})}catch{return p(e,I)}});m.put("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId,{soilHumidity:d,temperature:i,condutivity:R,ph:f,nitrogen:w,phosphorus:j,potassium:D}=t.body,[G]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,o))).execute();return G?(await c.update(h).set({soilHumidity:d,temperature:i,condutivity:R,ph:f,nitrogen:w,phosphorus:j,potassium:D}).where((0,r.and)((0,r.eq)(h.sensorDataId,n),(0,r.eq)(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:x}):e.status(200).json({message:"Dado do sensor atualizado com sucesso"}):e.status(404).json({message:y})}catch{return p(e,I)}});m.delete("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId;return(await c.delete(h).where((0,r.and)((0,r.eq)(h.sensorDataId,n),(0,r.eq)(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:x}):e.status(200).json({message:"Dado do sensor deletado com sucesso"})}catch{return p(e,I)}});m.post("/sensors/:sensorId/alert",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{message:o,level:d}=t.body;if(!o||!d)return e.status(400).json({message:_});if(isNaN(s))return e.status(400).json({message:"sensorId inv\xE1lido"});let[i]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();return i?(await c.insert(l).values({sensorId:s,message:o,level:d,timestamp:new Date}).execute(),e.status(201).json({message:"Alerta cadastrado com sucesso"})):e.status(404).json({message:y})}catch{return p(e,I)}});m.get("/sensor/:sensorId/alerts",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId,o=Number(s);if(isNaN(o))return e.status(400).json({message:"sensorId invalido"});let[d]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,o),(0,r.eq)(a.userId,n))).execute();if(!d)return e.status(404).json({message:y});let i=await c.select().from(l).where((0,r.eq)(l.sensorId,o)).execute();return i.length===0?e.status(404).json({message:"Nenhum alerta encontrado para este sensor"}):e.status(200).json(i)}catch{return p(e,I)}});m.get("/sensors/:sensorId/alerts/:alertId",async(t,e)=>{try{let{sensorId:s,alertId:n}=t.params,o=t.userId,d=Number(s),i=Number(n);if(isNaN(d)||isNaN(i))return e.status(400).json({message:"sensorId ou alertId invalido"});let[R]=await c.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,d),(0,r.eq)(a.userId,o))).execute();if(!R)return e.status(404).json({message:y});let[f]=await c.select().from(l).where((0,r.and)((0,r.eq)(l.alertId,i),(0,r.eq)(l.sensorId,d))).execute();return f?e.status(200).json(f):e.status(404).json({message:"alerta nao encontrado para este sensor"})}catch{return p(e,I)}});m.put("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,{message:o,level:d}=t.body,i=Number(s);if(isNaN(i))return e.status(400).json({message:"alertId invalido"});if(!o||!d)return e.status(400).json({message:_});let[R]=await c.select().from(l).innerJoin(a,(0,r.eq)(l.sensorId,a.sensorId)).where((0,r.and)((0,r.eq)(l.alertId,i),(0,r.eq)(a.userId,n))).execute();return R?(await c.update(l).set({message:o,level:d}).where((0,r.eq)(l.alertId,i)).execute()).rowCount===0?e.status(404).json({message:"Falha ao atualizar o alerta"}):e.status(200).json({message:"Alerta atualizado com sucesso"}):e.status(404).json({message:"Alerta n\xE3o encontrado ou n\xE3o pertence ao usu\xE1rio"})}catch{return p(e,I)}});m.delete("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,o=Number(s);if(isNaN(o))return e.status(400).json({message:"alertId invalido"});let[d]=await c.select().from(l).innerJoin(a,(0,r.eq)(l.sensorId,a.sensorId)).where((0,r.and)((0,r.eq)(l.alertId,o),(0,r.eq)(a.userId,n))).execute();return d?(await c.delete(l).where((0,r.eq)(l.alertId,o)).execute()).rowCount===0?e.status(404).json({message:"Falha ao deletar o alerta"}):e.status(404).json({message:"Alerta deletado"}):e.status(404).json({message:"Alerta nao encontrado ou nao pertence ao usuario"})}catch{return p(e,I)}});var H=m;var E=b(require("bcrypt")),A=require("drizzle-orm"),J=b(require("express")),P=b(require("jsonwebtoken"));var v=J.default.Router(),L=process.env.JWT_SECRET,k="Erro no Servidor, tente novamente",ne="Usu\xE1rio n\xE3o encontrado",ae="Senha incorreta",ue="Email e senha s\xE3o obrigat\xF3rios",de="Campos obrigat\xF3rios est\xE3o faltando",O=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));v.post("/webhook/sensors/data",async(t,e)=>{try{let s=t.query.token;if(!s)return e.status(401).json({message:"Token ausente"});let[n]=await c.select().from(a).where((0,A.eq)(a.webhookToken,s)).execute();if(!n)return e.status(403).json({message:"Token inv\xE1lido"});let{soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j}=t.body;return await c.insert(h).values({sensorId:n.sensorId,soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j}).execute(),e.status(201).json({message:"Dados recebidos com sucesso"})}catch{return O(e,k)}});v.post("/register",async(t,e)=>{try{let{name:s,email:n,password:o}=t.body;if(!s||!n||!o)return e.status(400).json({message:de});let d=await E.default.genSalt(10),i=await E.default.hash(o,d),f=(await c.insert(g).values({name:s,email:n,password:i}).returning().execute())[0],w=P.default.sign({id:f.userId},L,{expiresIn:"1h"});e.status(201).json({token:w,name:f.name,email:f.email})}catch{O(e,k)}});v.post("/login",async(t,e)=>{try{let{email:s,password:n}=t.body;if(!s||!n)return e.status(400).json({message:ue});let o=await c.select().from(g).where((0,A.eq)(g.email,s)).execute();if(o.length===0)return e.status(404).json({message:ne});if(!await E.default.compare(n,o[0].password))return e.status(401).json({message:ae});let i=o[0],R=P.default.sign({id:i.userId},L,{expiresIn:"1h"});e.status(200).json({token:R,name:i.name,email:i.email})}catch{O(e,k)}});var M=v;var N=(0,C.default)();N.use((0,K.default)());N.use(C.default.json());N.use("/api",M);N.use("/api",U,H);var V=process.env.PORT||3e3;N.listen(V,()=>{console.log(`\u2705 API rodando em http://localhost:${V}/api`)});
