"use strict";var oe=Object.create;var C=Object.defineProperty;var ne=Object.getOwnPropertyDescriptor;var ae=Object.getOwnPropertyNames;var ue=Object.getPrototypeOf,ie=Object.prototype.hasOwnProperty;var de=(s,e)=>{for(var t in e)C(s,t,{get:e[t],enumerable:!0})},ce=(s,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of ae(e))!ie.call(s,o)&&o!==t&&C(s,o,{get:()=>e[o],enumerable:!(a=ne(e,o))||a.enumerable});return s};var b=(s,e,t)=>(t=s!=null?oe(ue(s)):{},ce(e||!s||!s.__esModule?C(t,"default",{value:s,enumerable:!0}):t,s));var ee=b(require("cors")),Oe=require("dotenv/config"),U=b(require("express"));var L=b(require("jsonwebtoken")),J=process.env.JWT_SECRET,me=(s,e,t)=>{let a=s.headers.authorization;if(!a){e.status(401).json({message:"Acesso negado: Cabe\xE7alho de autoriza\xE7\xE3o n\xE3o encontrado."});return}if(!a.startsWith("Bearer ")){e.status(401).json({message:"Formato do token inv\xE1lido. Certifique-se de que o token come\xE7a com 'Bearer '."});return}let o=a.split(" ")[1];if(!o){e.status(401).json({message:"Token n\xE3o fornecido. Certifique-se de que o token est\xE1 presente."});return}try{if(!J)throw new Error("JWT_SECRET n\xE3o est\xE1 definido no ambiente.");let i=L.default.verify(o,J);return s.userId=i.id,t()}catch{e.status(401).json({message:"Token inv\xE1lido ou expirado."});return}},D=me;var r=require("drizzle-orm"),$=b(require("express"));var be=require("dotenv/config"),V=require("drizzle-orm/node-postgres"),K=require("pg");var M={};de(M,{alertTable:()=>m,sensorDataTable:()=>p,sensorTable:()=>n,userTable:()=>j});var u=require("drizzle-orm/pg-core"),j=(0,u.pgTable)("user",{userId:(0,u.serial)("user_id").primaryKey(),name:(0,u.varchar)("name",{length:255}),email:(0,u.varchar)("email",{length:255}).unique(),password:(0,u.varchar)("password",{length:255}),creationDate:(0,u.timestamp)("creation_date").defaultNow()}),n=(0,u.pgTable)("sensor",{sensorId:(0,u.serial)("sensor_id").primaryKey(),userId:(0,u.integer)("user_id").references(()=>j.userId),sensorName:(0,u.varchar)("sensor_name",{length:255}),location:(0,u.varchar)("location",{length:255}),installationDate:(0,u.timestamp)("installation_date"),webhookToken:(0,u.varchar)("weebhook_token",{length:255}).unique()},s=>({fkUser:(0,u.foreignKey)({columns:[s.userId],foreignColumns:[j.userId],name:"fk_user"})})),p=(0,u.pgTable)("sensor_data",{sensorDataId:(0,u.serial)("sensor_data_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>n.sensorId),soilHumidity:(0,u.real)("soil_humidity"),temperature:(0,u.real)("temperature"),condutivity:(0,u.real)("condutivity"),ph:(0,u.real)("ph"),nitrogen:(0,u.real)("nitrogen"),phosphorus:(0,u.real)("phosphorus"),potassium:(0,u.real)(" potassium"),dateTime:(0,u.timestamp)("date_time").defaultNow()},s=>({fkSensor:(0,u.foreignKey)({columns:[s.sensorId],foreignColumns:[n.sensorId],name:"fk_sensor"})})),m=(0,u.pgTable)("alert",{alertId:(0,u.serial)("alert_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>n.sensorId),message:(0,u.text)("message"),level:(0,u.varchar)("level",{length:50}),timestamp:(0,u.timestamp)("timestamp").defaultNow()},s=>({fkSensorAlert:(0,u.foreignKey)({columns:[s.sensorId],foreignColumns:[n.sensorId],name:"fk_sensor_alert"})}));if(!process.env.DB_HOST||!process.env.DB_USER||!process.env.DB_PASSWORD||!process.env.DB_NAME)throw new Error("Missing database environment variables");var le=new K.Pool({host:process.env.DB_HOST||"localhost",port:parseInt(process.env.DB_PORT||"5432"),user:process.env.DB_USER||"username",password:process.env.DB_PASSWORD||"password",database:process.env.DB_NAME||"dbname",ssl:process.env.NODE_ENV==="production"}),d=(0,V.drizzle)(le,{schema:M});var l=$.default.Router(),I="Erro no Servidor, tente novamente",pe="N\xE3o encontrado",T="Campos obrigat\xF3rios est\xE3o faltando",R="Sensor n\xE3o encontrado",S="Dado n\xE3o encontrado",Ie={soilHumidity:{ideal:[20,60],intermediate:[[15,20],[60,65]]},temperature:{ideal:[18,30],intermediate:[[15,18],[30,33]]},condutivity:{ideal:[.2,2],intermediate:[[.15,.2],[2,2.5]]},ph:{ideal:[6,7],intermediate:[[5.5,6],[7,7.5]]},nitrogen:{ideal:[20,50],intermediate:[[15,20],[50,60]]},phosphorus:{ideal:[15,40],intermediate:[[10,15],[40,50]]},potassium:{ideal:[100,300],intermediate:[[80,100],[300,350]]}},h=(s,e,t=500)=>(console.error(e),s.status(t).json({message:e}));l.post("/sensors",async(s,e)=>{try{let{sensorName:t,location:a}=s.body,o=s.userId;return!o||!t||!a?e.status(400).json({message:T}):(await d.insert(n).values({userId:o,sensorName:t,location:a,installationDate:new Date}).execute(),e.status(201).json({message:"Sensor cadastrado com sucesso"}))}catch{return h(e,I)}});l.patch("/sensors/:sensorId/assign",async(s,e)=>{try{let{sensorId:t}=s.params,a=s.userId;if(!a)return e.status(400).json({message:"userId n\xE3o encontrado"});if(isNaN(Number(t)))return e.status(400).json({message:"sensorId inv\xE1lido"});let[o]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,Number(t)),(0,r.isNull)(n.userId))).execute();return o?(await d.update(n).set({userId:a}).where((0,r.eq)(n.sensorId,Number(t))),e.status(200).json({message:"Sensor atribu\xEDdo ao usu\xE1rio com sucesso"})):e.status(404).json({message:"Sensor n\xE3o encontrado ou j\xE1 atribu\xEDdo a um usu\xE1rio"})}catch(t){return console.error(t),h(e,I)}});l.get("/sensors",async(s,e)=>{try{let t=s.userId,a=await d.select().from(n).where((0,r.eq)(n.userId,t)).execute();return a.length===0?e.status(404).json({message:pe}):e.status(200).json(a)}catch{return h(e,I)}});l.get("/sensors/:sensorId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,[o]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();return o?e.status(200).json(o):e.status(404).json({message:R})}catch{return h(e,I)}});l.put("/sensors/:sensorId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,{sensorName:o,location:i}=s.body;return!o||!i?e.status(400).json({message:"sensorName e location s\xE3o obrigat\xF3rios"}):(await d.update(n).set({sensorName:o,location:i}).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute()).rowCount===0?e.status(404).json({message:R}):e.status(200).json({message:"Sensor atualizado com sucesso"})}catch(t){return console.error(t),h(e,I)}});l.delete("/sensors/:sensorId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId;return(await d.delete(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute()).rowCount===0?e.status(404).json({message:R}):e.status(200).json({message:"Sensor deletado com sucesso"})}catch{return h(e,I)}});l.post("/sensors/:sensorId/data",D,async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,{soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:y,potassium:w}=s.body;if(o==null||i==null||c==null||g==null||f==null||y==null||w==null)return e.status(400).json({message:T});let[P]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();if(!P)return e.status(404).json({message:R});await d.insert(p).values({sensorId:t,soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:y,potassium:w,dateTime:new Date}).execute();let _={soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:y,potassium:w},O=[];for(let x of Object.keys(_)){let N=_[x],{ideal:z,intermediate:se}=Ie[x],E;if(N>=z[0]&&N<=z[1])continue;se.some(([te,re])=>N>=te&&N<=re)?E="Alerta":E="Cr\xEDtico";let W=`${x} fora do intervalo ideal (${N})`;await d.insert(m).values({sensorId:t,message:W,level:E,timestamp:new Date}).execute(),O.push({metric:x,level:E,message:W})}return e.status(201).json({message:"Dados inseridos e alertas gerados",alerts:O})}catch{return h(e,I)}});l.get("/sensors/:sensorId/data",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,[o]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();if(!o)return e.status(404).json({message:R});let i=await d.select().from(p).where((0,r.eq)(p.sensorId,t)).execute();return i.length===0?e.status(404).json({message:S}):e.status(200).json(i)}catch{return h(e,I)}});l.get("/sensors/:sensorId/data/:dataId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=Number(s.params.dataId),o=s.userId,[i]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,o))).execute();if(!i)return e.status(404).json({message:R});let[c]=await d.select().from(p).where((0,r.and)((0,r.eq)(p.sensorDataId,a),(0,r.eq)(p.sensorId,t))).execute();return c?e.status(200).json(c):e.status(404).json({message:S})}catch{return h(e,I)}});l.put("/sensors/:sensorId/data/:dataId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=Number(s.params.dataId),o=s.userId,{soilHumidity:i,temperature:c,condutivity:g,ph:f,nitrogen:y,phosphorus:w,potassium:P}=s.body,[_]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,o))).execute();return _?(await d.update(p).set({soilHumidity:i,temperature:c,condutivity:g,ph:f,nitrogen:y,phosphorus:w,potassium:P}).where((0,r.and)((0,r.eq)(p.sensorDataId,a),(0,r.eq)(p.sensorId,t))).execute()).rowCount===0?e.status(404).json({message:S}):e.status(200).json({message:"Dado do sensor atualizado com sucesso"}):e.status(404).json({message:R})}catch{return h(e,I)}});l.delete("/sensors/:sensorId/data/:dataId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=Number(s.params.dataId),o=s.userId;return(await d.delete(p).where((0,r.and)((0,r.eq)(p.sensorDataId,a),(0,r.eq)(p.sensorId,t))).execute()).rowCount===0?e.status(404).json({message:S}):e.status(200).json({message:"Dado do sensor deletado com sucesso"})}catch{return h(e,I)}});l.post("/sensors/:sensorId/alert",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,{message:o,level:i}=s.body;if(!o||!i)return e.status(400).json({message:T});if(isNaN(t))return e.status(400).json({message:"sensorId inv\xE1lido"});let[c]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();return c?(await d.insert(m).values({sensorId:t,message:o,level:i,timestamp:new Date}).execute(),e.status(201).json({message:"Alerta cadastrado com sucesso"})):e.status(404).json({message:R})}catch{return h(e,I)}});l.get("/sensor/:sensorId/alerts",async(s,e)=>{try{let{sensorId:t}=s.params,a=s.userId,o=Number(t);if(isNaN(o))return e.status(400).json({message:"sensorId invalido"});let[i]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,o),(0,r.eq)(n.userId,a))).execute();if(!i)return e.status(404).json({message:R});let c=await d.select().from(m).where((0,r.eq)(m.sensorId,o)).execute();return c.length===0?e.status(404).json({message:"Nenhum alerta encontrado para este sensor"}):e.status(200).json(c)}catch{return h(e,I)}});l.get("/sensors/:sensorId/alerts/:alertId",async(s,e)=>{try{let{sensorId:t,alertId:a}=s.params,o=s.userId,i=Number(t),c=Number(a);if(isNaN(i)||isNaN(c))return e.status(400).json({message:"sensorId ou alertId invalido"});let[g]=await d.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,i),(0,r.eq)(n.userId,o))).execute();if(!g)return e.status(404).json({message:R});let[f]=await d.select().from(m).where((0,r.and)((0,r.eq)(m.alertId,c),(0,r.eq)(m.sensorId,i))).execute();return f?e.status(200).json(f):e.status(404).json({message:"alerta nao encontrado para este sensor"})}catch{return h(e,I)}});l.put("/alert/:alertId",async(s,e)=>{try{let{alertId:t}=s.params,a=s.userId,{message:o,level:i}=s.body,c=Number(t);if(isNaN(c))return e.status(400).json({message:"alertId invalido"});if(!o||!i)return e.status(400).json({message:T});let[g]=await d.select().from(m).innerJoin(n,(0,r.eq)(m.sensorId,n.sensorId)).where((0,r.and)((0,r.eq)(m.alertId,c),(0,r.eq)(n.userId,a))).execute();return g?(await d.update(m).set({message:o,level:i}).where((0,r.eq)(m.alertId,c)).execute()).rowCount===0?e.status(404).json({message:"Falha ao atualizar o alerta"}):e.status(200).json({message:"Alerta atualizado com sucesso"}):e.status(404).json({message:"Alerta n\xE3o encontrado ou n\xE3o pertence ao usu\xE1rio"})}catch{return h(e,I)}});l.delete("/alert/:alertId",async(s,e)=>{try{let{alertId:t}=s.params,a=s.userId,o=Number(t);if(isNaN(o))return e.status(400).json({message:"alertId invalido"});let[i]=await d.select().from(m).innerJoin(n,(0,r.eq)(m.sensorId,n.sensorId)).where((0,r.and)((0,r.eq)(m.alertId,o),(0,r.eq)(n.userId,a))).execute();return i?(await d.delete(m).where((0,r.eq)(m.alertId,o)).execute()).rowCount===0?e.status(404).json({message:"Falha ao deletar o alerta"}):e.status(200).json({message:"Alerta deletado"}):e.status(404).json({message:"Alerta nao encontrado ou nao pertence ao usuario"})}catch{return h(e,I)}});var G=l;var A=b(require("bcrypt")),B=require("drizzle-orm"),Q=b(require("express")),q=b(require("jsonwebtoken"));var k=Q.default.Router(),X=process.env.JWT_SECRET,F="Erro no Servidor, tente novamente",he="Usu\xE1rio n\xE3o encontrado",fe="Senha incorreta",ge="Email e senha s\xE3o obrigat\xF3rios",Re="Campos obrigat\xF3rios est\xE3o faltando",H=(s,e,t=500)=>(console.error(e),s.status(t).json({message:e}));k.post("/webhook/sensors/data",async(s,e)=>{try{let t=s.query.token;if(!t)return e.status(401).json({message:"Token ausente"});let[a]=await d.select().from(n).where((0,B.eq)(n.webhookToken,t)).execute();if(!a)return e.status(403).json({message:"Token inv\xE1lido"});let{soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:y,potassium:w}=s.body;return await d.insert(p).values({sensorId:a.sensorId,soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:y,potassium:w}).execute(),e.status(201).json({message:"Dados recebidos com sucesso"})}catch{return H(e,F)}});k.post("/register",async(s,e)=>{try{let{name:t,email:a,password:o}=s.body;if(!t||!a||!o)return e.status(400).json({message:Re});let i=await A.default.genSalt(10),c=await A.default.hash(o,i),f=(await d.insert(j).values({name:t,email:a,password:c}).returning().execute())[0],y=q.default.sign({id:f.userId},X,{expiresIn:"1h"});e.status(201).json({token:y,name:f.name,email:f.email})}catch{H(e,F)}});k.post("/login",async(s,e)=>{try{let{email:t,password:a}=s.body;if(!t||!a)return e.status(400).json({message:ge});let o=await d.select().from(j).where((0,B.eq)(j.email,t)).execute();if(o.length===0)return e.status(404).json({message:he});if(!await A.default.compare(a,o[0].password))return e.status(401).json({message:fe});let c=o[0],g=q.default.sign({id:c.userId},X,{expiresIn:"1h"});e.status(200).json({token:g,name:c.name,email:c.email})}catch{H(e,F)}});var Y=k;var v=(0,U.default)();v.use((0,ee.default)());v.use(U.default.json());v.use("/api",Y);v.use("/api",D,G);var Z=process.env.PORT||3e3;v.listen(Z,()=>{console.log(`\u2705 API rodando em http://localhost:${Z}/api`)});
