"use strict";var oe=Object.create;var C=Object.defineProperty;var ne=Object.getOwnPropertyDescriptor;var ae=Object.getOwnPropertyNames;var ue=Object.getPrototypeOf,ie=Object.prototype.hasOwnProperty;var de=(t,e)=>{for(var s in e)C(t,s,{get:e[s],enumerable:!0})},ce=(t,e,s,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of ae(e))!ie.call(t,o)&&o!==s&&C(t,o,{get:()=>e[o],enumerable:!(n=ne(e,o))||n.enumerable});return t};var j=(t,e,s)=>(s=t!=null?oe(ue(t)):{},ce(e||!t||!t.__esModule?C(s,"default",{value:t,enumerable:!0}):s,t));var ee=j(require("cors")),Oe=require("dotenv/config"),z=j(require("express"));var L=j(require("jsonwebtoken")),J=process.env.JWT_SECRET,me=(t,e,s)=>{let n=t.headers.authorization;if(!n){e.status(401).json({message:"Acesso negado: Cabe\xE7alho de autoriza\xE7\xE3o n\xE3o encontrado."});return}if(!n.startsWith("Bearer ")){e.status(401).json({message:"Formato do token inv\xE1lido. Certifique-se de que o token come\xE7a com 'Bearer '."});return}let o=n.split(" ")[1];if(!o){e.status(401).json({message:"Token n\xE3o fornecido. Certifique-se de que o token est\xE1 presente."});return}try{if(!J)throw new Error("JWT_SECRET n\xE3o est\xE1 definido no ambiente.");let i=L.default.verify(o,J);return t.userId=i.id,s()}catch{e.status(401).json({message:"Token inv\xE1lido ou expirado."});return}},T=me;var r=require("drizzle-orm"),$=j(require("express"));var be=require("dotenv/config"),V=require("drizzle-orm/node-postgres"),K=require("pg");var M={};de(M,{alertTable:()=>m,sensorDataTable:()=>h,sensorTable:()=>a,userTable:()=>R});var u=require("drizzle-orm/pg-core"),R=(0,u.pgTable)("user",{userId:(0,u.serial)("user_id").primaryKey(),name:(0,u.varchar)("name",{length:255}),email:(0,u.varchar)("email",{length:255}).unique(),password:(0,u.varchar)("password",{length:255}),creationDate:(0,u.timestamp)("creation_date").defaultNow()}),a=(0,u.pgTable)("sensor",{sensorId:(0,u.serial)("sensor_id").primaryKey(),userId:(0,u.integer)("user_id").references(()=>R.userId),sensorName:(0,u.varchar)("sensor_name",{length:255}),location:(0,u.varchar)("location",{length:255}),installationDate:(0,u.timestamp)("installation_date"),webhookToken:(0,u.varchar)("weebhook_token",{length:255}).unique()},t=>({fkUser:(0,u.foreignKey)({columns:[t.userId],foreignColumns:[R.userId],name:"fk_user"})})),h=(0,u.pgTable)("sensor_data",{sensorDataId:(0,u.serial)("sensor_data_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>a.sensorId),soilHumidity:(0,u.real)("soil_humidity"),temperature:(0,u.real)("temperature"),condutivity:(0,u.real)("condutivity"),ph:(0,u.real)("ph"),nitrogen:(0,u.real)("nitrogen"),phosphorus:(0,u.real)("phosphorus"),potassium:(0,u.real)(" potassium"),dateTime:(0,u.timestamp)("date_time").defaultNow()},t=>({fkSensor:(0,u.foreignKey)({columns:[t.sensorId],foreignColumns:[a.sensorId],name:"fk_sensor"})})),m=(0,u.pgTable)("alert",{alertId:(0,u.serial)("alert_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>a.sensorId),message:(0,u.text)("message"),level:(0,u.varchar)("level",{length:50}),timestamp:(0,u.timestamp)("timestamp").defaultNow()},t=>({fkSensorAlert:(0,u.foreignKey)({columns:[t.sensorId],foreignColumns:[a.sensorId],name:"fk_sensor_alert"})}));if(!process.env.DB_HOST||!process.env.DB_USER||!process.env.DB_PASSWORD||!process.env.DB_NAME)throw new Error("Missing database environment variables");var le=new K.Pool({host:process.env.DB_HOST||"localhost",port:parseInt(process.env.DB_PORT||"5432"),user:process.env.DB_USER||"username",password:process.env.DB_PASSWORD||"password",database:process.env.DB_NAME||"dbname",ssl:process.env.NODE_ENV==="production"}),d=(0,V.drizzle)(le,{schema:M});var l=$.default.Router(),p="Erro no Servidor, tente novamente",pe="N\xE3o encontrado",v="Campos obrigat\xF3rios est\xE3o faltando",y="Sensor n\xE3o encontrado",A="Dado n\xE3o encontrado",Ie={soilHumidity:{ideal:[20,60],intermediate:[[15,20],[60,65]]},temperature:{ideal:[18,30],intermediate:[[15,18],[30,33]]},condutivity:{ideal:[.2,2],intermediate:[[.15,.2],[2,2.5]]},ph:{ideal:[6,7],intermediate:[[5.5,6],[7,7.5]]},nitrogen:{ideal:[20,50],intermediate:[[15,20],[50,60]]},phosphorus:{ideal:[15,40],intermediate:[[10,15],[40,50]]},potassium:{ideal:[100,300],intermediate:[[80,100],[300,350]]}},I=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));l.post("/sensors",async(t,e)=>{try{let{sensorName:s,location:n}=t.body,o=t.userId;return!o||!s||!n?e.status(400).json({message:v}):(await d.insert(a).values({userId:o,sensorName:s,location:n,installationDate:new Date}).execute(),e.status(201).json({message:"Sensor cadastrado com sucesso"}))}catch{return I(e,p)}});l.put("/user",async(t,e)=>{try{let s=t.userId,{name:n,email:o}=t.body;return!s||!n||!o?e.status(400).json({message:v}):(await d.update(R).set({name:n,email:o}).where((0,r.eq)(R.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio atualizado com sucesso"}))}catch{return I(e,p)}});l.delete("/user",async(t,e)=>{try{let s=t.userId;return s?(await d.delete(R).where((0,r.eq)(R.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio deletado com sucesso"})):e.status(400).json({message:"userId n\xE3o encontrado"})}catch{return I(e,p)}});l.patch("/sensors/:sensorId/assign",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId;if(!n)return e.status(400).json({message:"userId n\xE3o encontrado"});if(isNaN(Number(s)))return e.status(400).json({message:"sensorId inv\xE1lido"});let[o]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,Number(s)),(0,r.isNull)(a.userId))).execute();return o?(await d.update(a).set({userId:n}).where((0,r.eq)(a.sensorId,Number(s))),e.status(200).json({message:"Sensor atribu\xEDdo ao usu\xE1rio com sucesso"})):e.status(404).json({message:"Sensor n\xE3o encontrado ou j\xE1 atribu\xEDdo a um usu\xE1rio"})}catch(s){return console.error(s),I(e,p)}});l.get("/sensors",async(t,e)=>{try{let s=t.userId,n=await d.select().from(a).where((0,r.eq)(a.userId,s)).execute();return n.length===0?e.status(404).json({message:pe}):e.status(200).json(n)}catch{return I(e,p)}});l.get("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[o]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();return o?e.status(200).json(o):e.status(404).json({message:y})}catch{return I(e,p)}});l.put("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{sensorName:o,location:i}=t.body;return!o||!i?e.status(400).json({message:"sensorName e location s\xE3o obrigat\xF3rios"}):(await d.update(a).set({sensorName:o,location:i}).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute()).rowCount===0?e.status(404).json({message:y}):e.status(200).json({message:"Sensor atualizado com sucesso"})}catch(s){return console.error(s),I(e,p)}});l.delete("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId;return(await d.delete(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute()).rowCount===0?e.status(404).json({message:y}):e.status(200).json({message:"Sensor deletado com sucesso"})}catch{return I(e,p)}});l.post("/sensors/:sensorId/data",T,async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:w,potassium:b}=t.body;if(o==null||i==null||c==null||g==null||f==null||w==null||b==null)return e.status(400).json({message:v});let[k]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();if(!k)return e.status(404).json({message:y});await d.insert(h).values({sensorId:s,soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:w,potassium:b,dateTime:new Date}).execute();let x={soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:w,potassium:b},O=[];for(let E of Object.keys(x)){let N=x[E],{ideal:H,intermediate:se}=Ie[E],D;if(N>=H[0]&&N<=H[1])continue;se.some(([te,re])=>N>=te&&N<=re)?D="Alerta":D="Cr\xEDtico";let W=`${E} fora do intervalo ideal (${N})`;await d.insert(m).values({sensorId:s,message:W,level:D,timestamp:new Date}).execute(),O.push({metric:E,level:D,message:W})}return e.status(201).json({message:"Dados inseridos e alertas gerados",alerts:O})}catch{return I(e,p)}});l.get("/sensors/:sensorId/data",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[o]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();if(!o)return e.status(404).json({message:y});let i=await d.select().from(h).where((0,r.eq)(h.sensorId,s)).execute();return i.length===0?e.status(404).json({message:A}):e.status(200).json(i)}catch{return I(e,p)}});l.get("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId,[i]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,o))).execute();if(!i)return e.status(404).json({message:y});let[c]=await d.select().from(h).where((0,r.and)((0,r.eq)(h.sensorDataId,n),(0,r.eq)(h.sensorId,s))).execute();return c?e.status(200).json(c):e.status(404).json({message:A})}catch{return I(e,p)}});l.put("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId,{soilHumidity:i,temperature:c,condutivity:g,ph:f,nitrogen:w,phosphorus:b,potassium:k}=t.body,[x]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,o))).execute();return x?(await d.update(h).set({soilHumidity:i,temperature:c,condutivity:g,ph:f,nitrogen:w,phosphorus:b,potassium:k}).where((0,r.and)((0,r.eq)(h.sensorDataId,n),(0,r.eq)(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:A}):e.status(200).json({message:"Dado do sensor atualizado com sucesso"}):e.status(404).json({message:y})}catch{return I(e,p)}});l.delete("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId;return(await d.delete(h).where((0,r.and)((0,r.eq)(h.sensorDataId,n),(0,r.eq)(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:A}):e.status(200).json({message:"Dado do sensor deletado com sucesso"})}catch{return I(e,p)}});l.post("/sensors/:sensorId/alert",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{message:o,level:i}=t.body;if(!o||!i)return e.status(400).json({message:v});if(isNaN(s))return e.status(400).json({message:"sensorId inv\xE1lido"});let[c]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,s),(0,r.eq)(a.userId,n))).execute();return c?(await d.insert(m).values({sensorId:s,message:o,level:i,timestamp:new Date}).execute(),e.status(201).json({message:"Alerta cadastrado com sucesso"})):e.status(404).json({message:y})}catch{return I(e,p)}});l.get("/sensor/:sensorId/alerts",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId,o=Number(s);if(isNaN(o))return e.status(400).json({message:"sensorId invalido"});let[i]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,o),(0,r.eq)(a.userId,n))).execute();if(!i)return e.status(404).json({message:y});let c=await d.select().from(m).where((0,r.eq)(m.sensorId,o)).execute();return c.length===0?e.status(404).json({message:"Nenhum alerta encontrado para este sensor"}):e.status(200).json(c)}catch{return I(e,p)}});l.get("/sensors/:sensorId/alerts/:alertId",async(t,e)=>{try{let{sensorId:s,alertId:n}=t.params,o=t.userId,i=Number(s),c=Number(n);if(isNaN(i)||isNaN(c))return e.status(400).json({message:"sensorId ou alertId invalido"});let[g]=await d.select().from(a).where((0,r.and)((0,r.eq)(a.sensorId,i),(0,r.eq)(a.userId,o))).execute();if(!g)return e.status(404).json({message:y});let[f]=await d.select().from(m).where((0,r.and)((0,r.eq)(m.alertId,c),(0,r.eq)(m.sensorId,i))).execute();return f?e.status(200).json(f):e.status(404).json({message:"alerta nao encontrado para este sensor"})}catch{return I(e,p)}});l.put("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,{message:o,level:i}=t.body,c=Number(s);if(isNaN(c))return e.status(400).json({message:"alertId invalido"});if(!o||!i)return e.status(400).json({message:v});let[g]=await d.select().from(m).innerJoin(a,(0,r.eq)(m.sensorId,a.sensorId)).where((0,r.and)((0,r.eq)(m.alertId,c),(0,r.eq)(a.userId,n))).execute();return g?(await d.update(m).set({message:o,level:i}).where((0,r.eq)(m.alertId,c)).execute()).rowCount===0?e.status(404).json({message:"Falha ao atualizar o alerta"}):e.status(200).json({message:"Alerta atualizado com sucesso"}):e.status(404).json({message:"Alerta n\xE3o encontrado ou n\xE3o pertence ao usu\xE1rio"})}catch{return I(e,p)}});l.delete("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,o=Number(s);if(isNaN(o))return e.status(400).json({message:"alertId invalido"});let[i]=await d.select().from(m).innerJoin(a,(0,r.eq)(m.sensorId,a.sensorId)).where((0,r.and)((0,r.eq)(m.alertId,o),(0,r.eq)(a.userId,n))).execute();return i?(await d.delete(m).where((0,r.eq)(m.alertId,o)).execute()).rowCount===0?e.status(404).json({message:"Falha ao deletar o alerta"}):e.status(200).json({message:"Alerta deletado"}):e.status(404).json({message:"Alerta nao encontrado ou nao pertence ao usuario"})}catch{return I(e,p)}});var G=l;var S=j(require("bcrypt")),q=require("drizzle-orm"),Q=j(require("express")),B=j(require("jsonwebtoken"));var P=Q.default.Router(),X=process.env.JWT_SECRET,U="Erro no Servidor, tente novamente",he="Usu\xE1rio n\xE3o encontrado",fe="Senha incorreta",ge="Email e senha s\xE3o obrigat\xF3rios",Re="Campos obrigat\xF3rios est\xE3o faltando",F=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));P.post("/webhook/sensors/data",async(t,e)=>{try{let s=t.query.token;if(!s)return e.status(401).json({message:"Token ausente"});let[n]=await d.select().from(a).where((0,q.eq)(a.webhookToken,s)).execute();if(!n)return e.status(403).json({message:"Token inv\xE1lido"});let{soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:w,potassium:b}=t.body;return await d.insert(h).values({sensorId:n.sensorId,soilHumidity:o,temperature:i,condutivity:c,ph:g,nitrogen:f,phosphorus:w,potassium:b}).execute(),e.status(201).json({message:"Dados recebidos com sucesso"})}catch{return F(e,U)}});P.post("/register",async(t,e)=>{try{let{name:s,email:n,password:o}=t.body;if(!s||!n||!o)return e.status(400).json({message:Re});let i=await S.default.genSalt(10),c=await S.default.hash(o,i),f=(await d.insert(R).values({name:s,email:n,password:c}).returning().execute())[0],w=B.default.sign({id:f.userId},X,{expiresIn:"1h"});e.status(201).json({token:w,name:f.name,email:f.email})}catch{F(e,U)}});P.post("/login",async(t,e)=>{try{let{email:s,password:n}=t.body;if(!s||!n)return e.status(400).json({message:ge});let o=await d.select().from(R).where((0,q.eq)(R.email,s)).execute();if(o.length===0)return e.status(404).json({message:he});if(!await S.default.compare(n,o[0].password))return e.status(401).json({message:fe});let c=o[0],g=B.default.sign({id:c.userId},X,{expiresIn:"1h"});e.status(200).json({token:g,name:c.name,email:c.email})}catch{F(e,U)}});var Y=P;var _=(0,z.default)();_.use((0,ee.default)());_.use(z.default.json());_.use("/api",Y);_.use("/api",T,G);var Z=process.env.PORT||3e3;_.listen(Z,()=>{console.log(`\u2705 API rodando em http://localhost:${Z}/api`)});
