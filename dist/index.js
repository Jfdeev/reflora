"use strict";var Q=Object.create;var D=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var X=Object.getOwnPropertyNames;var Y=Object.getPrototypeOf,Z=Object.prototype.hasOwnProperty;var ee=(s,e)=>{for(var t in e)D(s,t,{get:e[t],enumerable:!0})},se=(s,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of X(e))!Z.call(s,o)&&o!==t&&D(s,o,{get:()=>e[o],enumerable:!(a=$(e,o))||a.enumerable});return s};var y=(s,e,t)=>(t=s!=null?Q(Y(s)):{},se(e||!s||!s.__esModule?D(t,"default",{value:s,enumerable:!0}):t,s));var K=y(require("cors")),_e=require("dotenv/config"),C=y(require("express"));var q=y(require("jsonwebtoken")),B=process.env.JWT_SECRET,te=(s,e,t)=>{let a=s.headers.authorization;if(!a){e.status(401).json({message:"Acesso negado: Cabe\xE7alho de autoriza\xE7\xE3o n\xE3o encontrado."});return}if(!a.startsWith("Bearer ")){e.status(401).json({message:"Formato do token inv\xE1lido. Certifique-se de que o token come\xE7a com 'Bearer '."});return}let o=a.split(" ")[1];if(!o){e.status(401).json({message:"Token n\xE3o fornecido. Certifique-se de que o token est\xE1 presente."});return}try{if(!B)throw new Error("JWT_SECRET n\xE3o est\xE1 definido no ambiente.");let d=q.default.verify(o,B);return s.userId=d.id,t()}catch{e.status(401).json({message:"Token inv\xE1lido ou expirado."});return}},F=te;var r=require("drizzle-orm"),W=y(require("express"));var le=require("dotenv/config"),U=require("drizzle-orm/node-postgres"),z=require("pg");var T={};ee(T,{alertTable:()=>m,sensorDataTable:()=>I,sensorTable:()=>n,userTable:()=>b});var u=require("drizzle-orm/pg-core"),b=(0,u.pgTable)("user",{userId:(0,u.serial)("user_id").primaryKey(),name:(0,u.varchar)("name",{length:255}),email:(0,u.varchar)("email",{length:255}).unique(),password:(0,u.varchar)("password",{length:255}),creationDate:(0,u.timestamp)("creation_date").defaultNow()}),n=(0,u.pgTable)("sensor",{sensorId:(0,u.serial)("sensor_id").primaryKey(),userId:(0,u.integer)("user_id").references(()=>b.userId),sensorName:(0,u.varchar)("sensor_name",{length:255}),location:(0,u.varchar)("location",{length:255}),installationDate:(0,u.timestamp)("installation_date"),webhookToken:(0,u.varchar)("weebhook_token",{length:255}).unique()},s=>({fkUser:(0,u.foreignKey)({columns:[s.userId],foreignColumns:[b.userId],name:"fk_user"})})),I=(0,u.pgTable)("sensor_data",{sensorDataId:(0,u.serial)("sensor_data_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>n.sensorId),soilHumidity:(0,u.real)("soil_humidity"),temperature:(0,u.real)("temperature"),condutivity:(0,u.real)("condutivity"),ph:(0,u.real)("ph"),nitrogen:(0,u.real)("nitrogen"),phosphorus:(0,u.real)("phosphorus"),potassium:(0,u.real)(" potassium"),dateTime:(0,u.timestamp)("date_time").defaultNow()},s=>({fkSensor:(0,u.foreignKey)({columns:[s.sensorId],foreignColumns:[n.sensorId],name:"fk_sensor"})})),m=(0,u.pgTable)("alert",{alertId:(0,u.serial)("alert_id").primaryKey(),sensorId:(0,u.integer)("sensor_id").references(()=>n.sensorId),message:(0,u.text)("message"),level:(0,u.varchar)("level",{length:50}),timestamp:(0,u.timestamp)("timestamp").defaultNow()},s=>({fkSensorAlert:(0,u.foreignKey)({columns:[s.sensorId],foreignColumns:[n.sensorId],name:"fk_sensor_alert"})}));if(!process.env.DB_HOST||!process.env.DB_USER||!process.env.DB_PASSWORD||!process.env.DB_NAME)throw new Error("Missing database environment variables");var re=new z.Pool({host:process.env.DB_HOST||"localhost",port:parseInt(process.env.DB_PORT||"5432"),user:process.env.DB_USER||"username",password:process.env.DB_PASSWORD||"password",database:process.env.DB_NAME||"dbname",ssl:process.env.NODE_ENV==="production"}),c=(0,U.drizzle)(re,{schema:T});var l=W.default.Router(),p="Erro no Servidor, tente novamente",oe="N\xE3o encontrado",S="Campos obrigat\xF3rios est\xE3o faltando",g="Sensor n\xE3o encontrado",_="Dado n\xE3o encontrado",h=(s,e,t=500)=>(console.error(e),s.status(t).json({message:e}));l.post("/sensors",async(s,e)=>{try{let{sensorName:t,location:a}=s.body,o=s.userId;return!o||!t||!a?e.status(400).json({message:S}):(await c.insert(n).values({userId:o,sensorName:t,location:a,installationDate:new Date}).execute(),e.status(201).json({message:"Sensor cadastrado com sucesso"}))}catch{return h(e,p)}});l.patch("/sensors/:sensorId/assign",async(s,e)=>{try{let{sensorId:t}=s.params,a=s.userId;if(!a)return e.status(400).json({message:"userId n\xE3o encontrado"});if(isNaN(Number(t)))return e.status(400).json({message:"sensorId inv\xE1lido"});let[o]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,Number(t)),(0,r.isNull)(n.userId))).execute();return o?(await c.update(n).set({userId:a}).where((0,r.eq)(n.sensorId,Number(t))),e.status(200).json({message:"Sensor atribu\xEDdo ao usu\xE1rio com sucesso"})):e.status(404).json({message:"Sensor n\xE3o encontrado ou j\xE1 atribu\xEDdo a um usu\xE1rio"})}catch(t){return console.error(t),h(e,p)}});l.get("/sensors",async(s,e)=>{try{let t=s.userId,a=await c.select().from(n).where((0,r.eq)(n.userId,t)).execute();return a.length===0?e.status(404).json({message:oe}):e.status(200).json(a)}catch{return h(e,p)}});l.get("/sensors/:sensorId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,[o]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();return o?e.status(200).json(o):e.status(404).json({message:g})}catch{return h(e,p)}});l.put("/sensors/:sensorId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,{sensorName:o,location:d}=s.body;return!o||!d?e.status(400).json({message:"sensorName e location s\xE3o obrigat\xF3rios"}):(await c.update(n).set({sensorName:o,location:d}).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute()).rowCount===0?e.status(404).json({message:g}):e.status(200).json({message:"Sensor atualizado com sucesso"})}catch(t){return console.error(t),h(e,p)}});l.delete("/sensors/:sensorId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId;return(await c.delete(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute()).rowCount===0?e.status(404).json({message:g}):e.status(200).json({message:"Sensor deletado com sucesso"})}catch{return h(e,p)}});l.post("/sensors/:sensorId/data",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,{soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j}=s.body,[v]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();return v?(await c.insert(I).values({sensorId:t,soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j,dateTime:new Date}).execute(),e.status(201).json({message:"Dados do sensor adicionados com sucesso"})):e.status(404).json({message:g})}catch{return h(e,p)}});l.get("/sensors/:sensorId/data",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,[o]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();if(!o)return e.status(404).json({message:g});let d=await c.select().from(I).where((0,r.eq)(I.sensorId,t)).execute();return d.length===0?e.status(404).json({message:_}):e.status(200).json(d)}catch{return h(e,p)}});l.get("/sensors/:sensorId/data/:dataId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=Number(s.params.dataId),o=s.userId,[d]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,o))).execute();if(!d)return e.status(404).json({message:g});let[i]=await c.select().from(I).where((0,r.and)((0,r.eq)(I.sensorDataId,a),(0,r.eq)(I.sensorId,t))).execute();return i?e.status(200).json(i):e.status(404).json({message:_})}catch{return h(e,p)}});l.put("/sensors/:sensorId/data/:dataId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=Number(s.params.dataId),o=s.userId,{soilHumidity:d,temperature:i,condutivity:R,ph:f,nitrogen:w,phosphorus:j,potassium:v}=s.body,[G]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,o))).execute();return G?(await c.update(I).set({soilHumidity:d,temperature:i,condutivity:R,ph:f,nitrogen:w,phosphorus:j,potassium:v}).where((0,r.and)((0,r.eq)(I.sensorDataId,a),(0,r.eq)(I.sensorId,t))).execute()).rowCount===0?e.status(404).json({message:_}):e.status(200).json({message:"Dado do sensor atualizado com sucesso"}):e.status(404).json({message:g})}catch{return h(e,p)}});l.delete("/sensors/:sensorId/data/:dataId",async(s,e)=>{try{let t=Number(s.params.sensorId),a=Number(s.params.dataId),o=s.userId;return(await c.delete(I).where((0,r.and)((0,r.eq)(I.sensorDataId,a),(0,r.eq)(I.sensorId,t))).execute()).rowCount===0?e.status(404).json({message:_}):e.status(200).json({message:"Dado do sensor deletado com sucesso"})}catch{return h(e,p)}});l.post("/sensors/:sensorId/alert",async(s,e)=>{try{let t=Number(s.params.sensorId),a=s.userId,{message:o,level:d}=s.body;if(!o||!d)return e.status(400).json({message:S});if(isNaN(t))return e.status(400).json({message:"sensorId inv\xE1lido"});let[i]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,t),(0,r.eq)(n.userId,a))).execute();return i?(await c.insert(m).values({sensorId:t,message:o,level:d,timestamp:new Date}).execute(),e.status(201).json({message:"Alerta cadastrado com sucesso"})):e.status(404).json({message:g})}catch{return h(e,p)}});l.get("/sensor/:sensorId/alerts",async(s,e)=>{try{let{sensorId:t}=s.params,a=s.userId,o=Number(t);if(isNaN(o))return e.status(400).json({message:"sensorId invalido"});let[d]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,o),(0,r.eq)(n.userId,a))).execute();if(!d)return e.status(404).json({message:g});let i=await c.select().from(m).where((0,r.eq)(m.sensorId,o)).execute();return i.length===0?e.status(404).json({message:"Nenhum alerta encontrado para este sensor"}):e.status(200).json(i)}catch{return h(e,p)}});l.get("/sensors/:sensorId/alerts/:alertId",async(s,e)=>{try{let{sensorId:t,alertId:a}=s.params,o=s.userId,d=Number(t),i=Number(a);if(isNaN(d)||isNaN(i))return e.status(400).json({message:"sensorId ou alertId invalido"});let[R]=await c.select().from(n).where((0,r.and)((0,r.eq)(n.sensorId,d),(0,r.eq)(n.userId,o))).execute();if(!R)return e.status(404).json({message:g});let[f]=await c.select().from(m).where((0,r.and)((0,r.eq)(m.alertId,i),(0,r.eq)(m.sensorId,d))).execute();return f?e.status(200).json(f):e.status(404).json({message:"alerta nao encontrado para este sensor"})}catch{return h(e,p)}});l.put("/alert/:alertId",async(s,e)=>{try{let{alertId:t}=s.params,a=s.userId,{message:o,level:d}=s.body,i=Number(t);if(isNaN(i))return e.status(400).json({message:"alertId invalido"});if(!o||!d)return e.status(400).json({message:S});let[R]=await c.select().from(m).innerJoin(n,(0,r.eq)(m.sensorId,n.sensorId)).where((0,r.and)((0,r.eq)(m.alertId,i),(0,r.eq)(n.userId,a))).execute();return R?(await c.update(m).set({message:o,level:d}).where((0,r.eq)(m.alertId,i)).execute()).rowCount===0?e.status(404).json({message:"Falha ao atualizar o alerta"}):e.status(200).json({message:"Alerta atualizado com sucesso"}):e.status(404).json({message:"Alerta n\xE3o encontrado ou n\xE3o pertence ao usu\xE1rio"})}catch{return h(e,p)}});l.delete("/alert/:alertId",async(s,e)=>{try{let{alertId:t}=s.params,a=s.userId,o=Number(t);if(isNaN(o))return e.status(400).json({message:"alertId invalido"});let[d]=await c.select().from(m).innerJoin(n,(0,r.eq)(m.sensorId,n.sensorId)).where((0,r.and)((0,r.eq)(m.alertId,o),(0,r.eq)(n.userId,a))).execute();return d?(await c.delete(m).where((0,r.eq)(m.alertId,o)).execute()).rowCount===0?e.status(404).json({message:"Falha ao deletar o alerta"}):e.status(404).json({message:"Alerta deletado"}):e.status(404).json({message:"Alerta nao encontrado ou nao pertence ao usuario"})}catch{return h(e,p)}});var H=l;var x=y(require("bcrypt")),A=require("drizzle-orm"),J=y(require("express")),k=y(require("jsonwebtoken"));var E=J.default.Router(),L=process.env.JWT_SECRET,P="Erro no Servidor, tente novamente",ne="Usu\xE1rio n\xE3o encontrado",ae="Senha incorreta",ue="Email e senha s\xE3o obrigat\xF3rios",de="Campos obrigat\xF3rios est\xE3o faltando",O=(s,e,t=500)=>(console.error(e),s.status(t).json({message:e}));E.post("/webhook/sensors/data",async(s,e)=>{try{let t=s.query.token;if(!t)return e.status(401).json({message:"Token ausente"});let[a]=await c.select().from(n).where((0,A.eq)(n.webhookToken,t)).execute();if(!a)return e.status(403).json({message:"Token inv\xE1lido"});let{soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j}=s.body;return await c.insert(I).values({sensorId:a.sensorId,soilHumidity:o,temperature:d,condutivity:i,ph:R,nitrogen:f,phosphorus:w,potassium:j,dateTime:new Date}).execute(),e.status(201).json({message:"Dados recebidos com sucesso"})}catch{return O(e,P)}});E.post("/register",async(s,e)=>{try{let{name:t,email:a,password:o}=s.body;if(!t||!a||!o)return e.status(400).json({message:de});let d=await x.default.genSalt(10),i=await x.default.hash(o,d),f=(await c.insert(b).values({name:t,email:a,password:i}).returning().execute())[0],w=k.default.sign({id:f.userId},L,{expiresIn:"1h"});e.status(201).json({token:w,name:f.name,email:f.email})}catch{O(e,P)}});E.post("/login",async(s,e)=>{try{let{email:t,password:a}=s.body;if(!t||!a)return e.status(400).json({message:ue});let o=await c.select().from(b).where((0,A.eq)(b.email,t)).execute();if(o.length===0)return e.status(404).json({message:ne});if(!await x.default.compare(a,o[0].password))return e.status(401).json({message:ae});let i=o[0],R=k.default.sign({id:i.userId},L,{expiresIn:"1h"});e.status(200).json({token:R,name:i.name,email:i.email})}catch{O(e,P)}});var M=E;var N=(0,C.default)();N.use((0,K.default)());N.use(C.default.json());N.use("/api",M);N.use("/api",F,H);var V=process.env.PORT||3e3;N.listen(V,()=>{console.log(`\u2705 API rodando em http://localhost:${V}/api`)});
