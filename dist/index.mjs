var G=Object.defineProperty;var Q=(t,e)=>{for(var s in e)G(t,s,{get:e[s],enumerable:!0})};import ie from"cors";import"dotenv/config";import V from"express";import $ from"jsonwebtoken";var U=process.env.JWT_SECRET,X=(t,e,s)=>{let n=t.headers.authorization;if(!n){e.status(401).json({message:"Acesso negado: Cabe\xE7alho de autoriza\xE7\xE3o n\xE3o encontrado."});return}if(!n.startsWith("Bearer ")){e.status(401).json({message:"Formato do token inv\xE1lido. Certifique-se de que o token come\xE7a com 'Bearer '."});return}let o=n.split(" ")[1];if(!o){e.status(401).json({message:"Token n\xE3o fornecido. Certifique-se de que o token est\xE1 presente."});return}try{if(!U)throw new Error("JWT_SECRET n\xE3o est\xE1 definido no ambiente.");let u=$.verify(o,U);return t.userId=u.id,s()}catch{e.status(401).json({message:"Token inv\xE1lido ou expirado."});return}},F=X;import{and as p,eq as a,isNull as te}from"drizzle-orm";import re from"express";import"dotenv/config";import{drizzle as Z}from"drizzle-orm/node-postgres";import{Pool as ee}from"pg";var O={};Q(O,{alertTable:()=>m,sensorDataTable:()=>h,sensorTable:()=>r,userTable:()=>g});import{foreignKey as P,integer as k,pgTable as x,real as b,serial as E,text as Y,timestamp as v,varchar as j}from"drizzle-orm/pg-core";var g=x("user",{userId:E("user_id").primaryKey(),name:j("name",{length:255}),email:j("email",{length:255}).unique(),password:j("password",{length:255}),creationDate:v("creation_date").defaultNow()}),r=x("sensor",{sensorId:E("sensor_id").primaryKey(),userId:k("user_id").references(()=>g.userId),sensorName:j("sensor_name",{length:255}),location:j("location",{length:255}),installationDate:v("installation_date"),webhookToken:j("weebhook_token",{length:255}).unique()},t=>({fkUser:P({columns:[t.userId],foreignColumns:[g.userId],name:"fk_user"})})),h=x("sensor_data",{sensorDataId:E("sensor_data_id").primaryKey(),sensorId:k("sensor_id").references(()=>r.sensorId),soilHumidity:b("soil_humidity"),temperature:b("temperature"),condutivity:b("condutivity"),ph:b("ph"),nitrogen:b("nitrogen"),phosphorus:b("phosphorus"),potassium:b(" potassium"),dateTime:v("date_time").defaultNow()},t=>({fkSensor:P({columns:[t.sensorId],foreignColumns:[r.sensorId],name:"fk_sensor"})})),m=x("alert",{alertId:E("alert_id").primaryKey(),sensorId:k("sensor_id").references(()=>r.sensorId),message:Y("message"),level:j("level",{length:50}),timestamp:v("timestamp").defaultNow()},t=>({fkSensorAlert:P({columns:[t.sensorId],foreignColumns:[r.sensorId],name:"fk_sensor_alert"})}));if(!process.env.DB_HOST||!process.env.DB_USER||!process.env.DB_PASSWORD||!process.env.DB_NAME)throw new Error("Missing database environment variables");var se=new ee({host:process.env.DB_HOST||"localhost",port:parseInt(process.env.DB_PORT||"5432"),user:process.env.DB_USER||"username",password:process.env.DB_PASSWORD||"password",database:process.env.DB_NAME||"dbname",ssl:process.env.NODE_ENV==="production"}),d=Z(se,{schema:O});var i=re.Router(),l="Erro no Servidor, tente novamente",oe="N\xE3o encontrado",D="Campos obrigat\xF3rios est\xE3o faltando",y="Sensor n\xE3o encontrado",T="Dado n\xE3o encontrado",I=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));i.put("/user",async(t,e)=>{try{let s=t.userId,{name:n,email:o}=t.body;return!s||!n||!o?e.status(400).json({message:D}):(await d.update(g).set({name:n,email:o}).where(a(g.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio atualizado com sucesso"}))}catch{return I(e,l)}});i.delete("/user",async(t,e)=>{try{let s=t.userId;return s?(await d.delete(g).where(a(g.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio deletado com sucesso"})):e.status(400).json({message:"userId n\xE3o encontrado"})}catch{return I(e,l)}});i.post("/sensors",async(t,e)=>{try{let{sensorName:s,location:n}=t.body,o=t.userId;return!o||!s||!n?e.status(400).json({message:D}):(await d.insert(r).values({userId:o,sensorName:s,location:n,installationDate:new Date}).execute(),e.status(201).json({message:"Sensor cadastrado com sucesso"}))}catch{return I(e,l)}});i.patch("/sensors/:sensorId/assign",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId;if(!n)return e.status(400).json({message:"userId n\xE3o encontrado"});if(isNaN(Number(s)))return e.status(400).json({message:"sensorId inv\xE1lido"});let[o]=await d.select().from(r).where(p(a(r.sensorId,Number(s)),te(r.userId))).execute();return o?(await d.update(r).set({userId:n}).where(a(r.sensorId,Number(s))),e.status(200).json({message:"Sensor atribu\xEDdo ao usu\xE1rio com sucesso"})):e.status(404).json({message:"Sensor n\xE3o encontrado ou j\xE1 atribu\xEDdo a um usu\xE1rio"})}catch(s){return console.error(s),I(e,l)}});i.get("/sensors",async(t,e)=>{try{let s=t.userId,n=await d.select().from(r).where(a(r.userId,s)).execute();return n.length===0?e.status(404).json({message:oe}):e.status(200).json(n)}catch{return I(e,l)}});i.get("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[o]=await d.select().from(r).where(p(a(r.sensorId,s),a(r.userId,n))).execute();return o?e.status(200).json(o):e.status(404).json({message:y})}catch{return I(e,l)}});i.put("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{sensorName:o,location:u}=t.body;return!o||!u?e.status(400).json({message:"sensorName e location s\xE3o obrigat\xF3rios"}):(await d.update(r).set({sensorName:o,location:u}).where(p(a(r.sensorId,s),a(r.userId,n))).execute()).rowCount===0?e.status(404).json({message:y}):e.status(200).json({message:"Sensor atualizado com sucesso"})}catch(s){return console.error(s),I(e,l)}});i.delete("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId;return(await d.delete(r).where(p(a(r.sensorId,s),a(r.userId,n))).execute()).rowCount===0?e.status(404).json({message:y}):e.status(200).json({message:"Sensor deletado com sucesso"})}catch{return I(e,l)}});i.post("/sensors/:sensorId/data",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{soilHumidity:o,temperature:u,condutivity:c,ph:R,nitrogen:f,phosphorus:w,potassium:N}=t.body,[A]=await d.select().from(r).where(p(a(r.sensorId,s),a(r.userId,n))).execute();return A?(await d.insert(h).values({sensorId:s,soilHumidity:o,temperature:u,condutivity:c,ph:R,nitrogen:f,phosphorus:w,potassium:N,dateTime:new Date}).execute(),e.status(201).json({message:"Dados do sensor adicionados com sucesso"})):e.status(404).json({message:y})}catch{return I(e,l)}});i.get("/sensors/:sensorId/data",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[o]=await d.select().from(r).where(p(a(r.sensorId,s),a(r.userId,n))).execute();if(!o)return e.status(404).json({message:y});let u=await d.select().from(h).where(a(h.sensorId,s)).execute();return u.length===0?e.status(404).json({message:T}):e.status(200).json(u)}catch{return I(e,l)}});i.get("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId,[u]=await d.select().from(r).where(p(a(r.sensorId,s),a(r.userId,o))).execute();if(!u)return e.status(404).json({message:y});let[c]=await d.select().from(h).where(p(a(h.sensorDataId,n),a(h.sensorId,s))).execute();return c?e.status(200).json(c):e.status(404).json({message:T})}catch{return I(e,l)}});i.put("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId,{soilHumidity:u,temperature:c,condutivity:R,ph:f,nitrogen:w,phosphorus:N,potassium:A}=t.body,[K]=await d.select().from(r).where(p(a(r.sensorId,s),a(r.userId,o))).execute();return K?(await d.update(h).set({soilHumidity:u,temperature:c,condutivity:R,ph:f,nitrogen:w,phosphorus:N,potassium:A}).where(p(a(h.sensorDataId,n),a(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:T}):e.status(200).json({message:"Dado do sensor atualizado com sucesso"}):e.status(404).json({message:y})}catch{return I(e,l)}});i.delete("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),o=t.userId;return(await d.delete(h).where(p(a(h.sensorDataId,n),a(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:T}):e.status(200).json({message:"Dado do sensor deletado com sucesso"})}catch{return I(e,l)}});i.post("/sensors/:sensorId/alert",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{message:o,level:u}=t.body;if(!o||!u)return e.status(400).json({message:D});if(isNaN(s))return e.status(400).json({message:"sensorId inv\xE1lido"});let[c]=await d.select().from(r).where(p(a(r.sensorId,s),a(r.userId,n))).execute();return c?(await d.insert(m).values({sensorId:s,message:o,level:u,timestamp:new Date}).execute(),e.status(201).json({message:"Alerta cadastrado com sucesso"})):e.status(404).json({message:y})}catch{return I(e,l)}});i.get("/sensor/:sensorId/alerts",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId,o=Number(s);if(isNaN(o))return e.status(400).json({message:"sensorId invalido"});let[u]=await d.select().from(r).where(p(a(r.sensorId,o),a(r.userId,n))).execute();if(!u)return e.status(404).json({message:y});let c=await d.select().from(m).where(a(m.sensorId,o)).execute();return c.length===0?e.status(404).json({message:"Nenhum alerta encontrado para este sensor"}):e.status(200).json(c)}catch{return I(e,l)}});i.get("/sensors/:sensorId/alerts/:alertId",async(t,e)=>{try{let{sensorId:s,alertId:n}=t.params,o=t.userId,u=Number(s),c=Number(n);if(isNaN(u)||isNaN(c))return e.status(400).json({message:"sensorId ou alertId invalido"});let[R]=await d.select().from(r).where(p(a(r.sensorId,u),a(r.userId,o))).execute();if(!R)return e.status(404).json({message:y});let[f]=await d.select().from(m).where(p(a(m.alertId,c),a(m.sensorId,u))).execute();return f?e.status(200).json(f):e.status(404).json({message:"alerta nao encontrado para este sensor"})}catch{return I(e,l)}});i.put("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,{message:o,level:u}=t.body,c=Number(s);if(isNaN(c))return e.status(400).json({message:"alertId invalido"});if(!o||!u)return e.status(400).json({message:D});let[R]=await d.select().from(m).innerJoin(r,a(m.sensorId,r.sensorId)).where(p(a(m.alertId,c),a(r.userId,n))).execute();return R?(await d.update(m).set({message:o,level:u}).where(a(m.alertId,c)).execute()).rowCount===0?e.status(404).json({message:"Falha ao atualizar o alerta"}):e.status(200).json({message:"Alerta atualizado com sucesso"}):e.status(404).json({message:"Alerta n\xE3o encontrado ou n\xE3o pertence ao usu\xE1rio"})}catch{return I(e,l)}});i.delete("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,o=Number(s);if(isNaN(o))return e.status(400).json({message:"alertId invalido"});let[u]=await d.select().from(m).innerJoin(r,a(m.sensorId,r.sensorId)).where(p(a(m.alertId,o),a(r.userId,n))).execute();return u?(await d.delete(m).where(a(m.alertId,o)).execute()).rowCount===0?e.status(404).json({message:"Falha ao deletar o alerta"}):e.status(404).json({message:"Alerta deletado"}):e.status(404).json({message:"Alerta nao encontrado ou nao pertence ao usuario"})}catch{return I(e,l)}});var z=i;import C from"bcrypt";import{eq as W}from"drizzle-orm";import ne from"express";import H from"jsonwebtoken";var S=ne.Router(),J=process.env.JWT_SECRET,q="Erro no Servidor, tente novamente",ae="Usu\xE1rio n\xE3o encontrado",ue="Senha incorreta",de="Email e senha s\xE3o obrigat\xF3rios",ce="Campos obrigat\xF3rios est\xE3o faltando",B=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));S.post("/webhook/sensors/data",async(t,e)=>{try{let s=t.query.token;if(!s)return e.status(401).json({message:"Token ausente"});let[n]=await d.select().from(r).where(W(r.webhookToken,s)).execute();if(!n)return e.status(403).json({message:"Token inv\xE1lido"});let{soilHumidity:o,temperature:u,condutivity:c,ph:R,nitrogen:f,phosphorus:w,potassium:N}=t.body;return await d.insert(h).values({sensorId:n.sensorId,soilHumidity:o,temperature:u,condutivity:c,ph:R,nitrogen:f,phosphorus:w,potassium:N}).execute(),e.status(201).json({message:"Dados recebidos com sucesso"})}catch{return B(e,q)}});S.post("/register",async(t,e)=>{try{let{name:s,email:n,password:o}=t.body;if(!s||!n||!o)return e.status(400).json({message:ce});let u=await C.genSalt(10),c=await C.hash(o,u),f=(await d.insert(g).values({name:s,email:n,password:c}).returning().execute())[0],w=H.sign({id:f.userId},J,{expiresIn:"1h"});e.status(201).json({token:w,name:f.name,email:f.email})}catch{B(e,q)}});S.post("/login",async(t,e)=>{try{let{email:s,password:n}=t.body;if(!s||!n)return e.status(400).json({message:de});let o=await d.select().from(g).where(W(g.email,s)).execute();if(o.length===0)return e.status(404).json({message:ae});if(!await C.compare(n,o[0].password))return e.status(401).json({message:ue});let c=o[0],R=H.sign({id:c.userId},J,{expiresIn:"1h"});e.status(200).json({token:R,name:c.name,email:c.email})}catch{B(e,q)}});var L=S;var _=V();_.use(ie());_.use(V.json());_.use("/api",L);_.use("/api",F,z);var M=process.env.PORT||3e3;_.listen(M,()=>{console.log(`\u2705 API rodando em http://localhost:${M}/api`)});
