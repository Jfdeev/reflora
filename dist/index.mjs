var re=Object.defineProperty;var oe=(t,e)=>{for(var s in e)re(t,s,{get:e[s],enumerable:!0})};import we from"cors";import"dotenv/config";import ee from"express";import ne from"jsonwebtoken";var K=process.env.JWT_SECRET,ae=(t,e,s)=>{let n=t.headers.authorization;if(!n){e.status(401).json({message:"Acesso negado: Cabe\xE7alho de autoriza\xE7\xE3o n\xE3o encontrado."});return}if(!n.startsWith("Bearer ")){e.status(401).json({message:"Formato do token inv\xE1lido. Certifique-se de que o token come\xE7a com 'Bearer '."});return}let r=n.split(" ")[1];if(!r){e.status(401).json({message:"Token n\xE3o fornecido. Certifique-se de que o token est\xE1 presente."});return}try{if(!K)throw new Error("JWT_SECRET n\xE3o est\xE1 definido no ambiente.");let u=ne.verify(r,K);return t.userId=u.id,s()}catch{e.status(401).json({message:"Token inv\xE1lido ou expirado."});return}},k=ae;import{and as I,eq as a,isNull as me}from"drizzle-orm";import le from"express";import"dotenv/config";import{drizzle as ie}from"drizzle-orm/node-postgres";import{Pool as de}from"pg";var z={};oe(z,{alertTable:()=>c,sensorDataTable:()=>h,sensorTable:()=>o,userTable:()=>y});import{foreignKey as U,integer as F,pgTable as O,real as N,serial as C,text as ue,timestamp as M,varchar as R}from"drizzle-orm/pg-core";var y=O("user",{userId:C("user_id").primaryKey(),name:R("name",{length:255}),email:R("email",{length:255}).unique(),password:R("password",{length:255}),creationDate:M("creation_date").defaultNow()}),o=O("sensor",{sensorId:C("sensor_id").primaryKey(),userId:F("user_id").references(()=>y.userId),sensorName:R("sensor_name",{length:255}),location:R("location",{length:255}),installationDate:M("installation_date"),webhookToken:R("weebhook_token",{length:255}).unique()},t=>({fkUser:U({columns:[t.userId],foreignColumns:[y.userId],name:"fk_user"})})),h=O("sensor_data",{sensorDataId:C("sensor_data_id").primaryKey(),sensorId:F("sensor_id").references(()=>o.sensorId),soilHumidity:N("soil_humidity"),levelHumidity:R("level_humidity",{length:50}),temperature:N("temperature"),levelTemperature:R("level_temperature",{length:50}),condutivity:N("condutivity"),levelCondutivity:R("level_condutivity",{length:50}),ph:N("ph"),levelPh:R("level_ph",{length:50}),nitrogen:N("nitrogen"),levelNitrogen:R("level_nitrogen",{length:50}),phosphorus:N("phosphorus"),levelPhosphorus:R("level_phosphorus",{length:50}),potassium:N(" potassium"),levelPotassium:R("level_potassium",{length:50}),dateTime:M("date_time").defaultNow()},t=>({fkSensor:U({columns:[t.sensorId],foreignColumns:[o.sensorId],name:"fk_sensor"})})),c=O("alert",{alertId:C("alert_id").primaryKey(),sensorId:F("sensor_id").references(()=>o.sensorId),message:ue("message"),level:R("level",{length:50}),timestamp:M("timestamp").defaultNow()},t=>({fkSensorAlert:U({columns:[t.sensorId],foreignColumns:[o.sensorId],name:"fk_sensor_alert"})}));if(!process.env.DB_HOST||!process.env.DB_USER||!process.env.DB_PASSWORD||!process.env.DB_NAME)throw new Error("Missing database environment variables");var ce=new de({host:process.env.DB_HOST||"localhost",port:parseInt(process.env.DB_PORT||"5432"),user:process.env.DB_USER||"username",password:process.env.DB_PASSWORD||"password",database:process.env.DB_NAME||"dbname",ssl:process.env.NODE_ENV==="production"}),i=ie(ce,{schema:z});var m=le.Router(),l="Erro no Servidor, tente novamente",pe="N\xE3o encontrado",A="Campos obrigat\xF3rios est\xE3o faltando",w="Sensor n\xE3o encontrado",q="Dado n\xE3o encontrado",Ie={soilHumidity:{ideal:[20,60],intermediate:[[15,20],[60,65]]},temperature:{ideal:[18,30],intermediate:[[15,18],[30,33]]},condutivity:{ideal:[.2,2],intermediate:[[.15,.2],[2,2.5]]},ph:{ideal:[6,7],intermediate:[[5.5,6],[7,7.5]]},nitrogen:{ideal:[20,50],intermediate:[[15,20],[50,60]]},phosphorus:{ideal:[15,40],intermediate:[[10,15],[40,50]]},potassium:{ideal:[100,300],intermediate:[[80,100],[300,350]]}},p=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));m.post("/sensors",async(t,e)=>{try{let{sensorName:s,location:n}=t.body,r=t.userId;return!r||!s||!n?e.status(400).json({message:A}):(await i.insert(o).values({userId:r,sensorName:s,location:n,installationDate:new Date}).execute(),e.status(201).json({message:"Sensor cadastrado com sucesso"}))}catch{return p(e,l)}});m.put("/user",async(t,e)=>{try{let s=t.userId,{name:n,email:r}=t.body;return!s||!n||!r?e.status(400).json({message:A}):(await i.update(y).set({name:n,email:r}).where(a(y.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio atualizado com sucesso"}))}catch{return p(e,l)}});m.delete("/user",async(t,e)=>{try{let s=t.userId;return s?(await i.delete(y).where(a(y.userId,s)).execute(),e.status(200).json({message:"Usu\xE1rio deletado com sucesso"})):e.status(400).json({message:"userId n\xE3o encontrado"})}catch{return p(e,l)}});m.patch("/sensors/:sensorId/assign",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId;if(!n)return e.status(400).json({message:"userId n\xE3o encontrado"});if(isNaN(Number(s)))return e.status(400).json({message:"sensorId inv\xE1lido"});let[r]=await i.select().from(o).where(I(a(o.sensorId,Number(s)),me(o.userId))).execute();return r?(await i.update(o).set({userId:n}).where(a(o.sensorId,Number(s))),e.status(200).json({message:"Sensor atribu\xEDdo ao usu\xE1rio com sucesso"})):e.status(404).json({message:"Sensor n\xE3o encontrado ou j\xE1 atribu\xEDdo a um usu\xE1rio"})}catch(s){return console.error(s),p(e,l)}});m.get("/sensors",async(t,e)=>{try{let s=t.userId,n=await i.select().from(o).where(a(o.userId,s)).execute();return n.length===0?e.status(404).json({message:pe}):e.status(200).json(n)}catch{return p(e,l)}});m.get("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[r]=await i.select().from(o).where(I(a(o.sensorId,s),a(o.userId,n))).execute();return r?e.status(200).json(r):e.status(404).json({message:w})}catch{return p(e,l)}});m.put("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{sensorName:r,location:u}=t.body;return!r||!u?e.status(400).json({message:"sensorName e location s\xE3o obrigat\xF3rios"}):(await i.update(o).set({sensorName:r,location:u}).where(I(a(o.sensorId,s),a(o.userId,n))).execute()).rowCount===0?e.status(404).json({message:w}):e.status(200).json({message:"Sensor atualizado com sucesso"})}catch(s){return console.error(s),p(e,l)}});m.delete("/sensors/:sensorId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId;return(await i.delete(o).where(I(a(o.sensorId,s),a(o.userId,n))).execute()).rowCount===0?e.status(404).json({message:w}):e.status(200).json({message:"Sensor deletado com sucesso"})}catch{return p(e,l)}});m.post("/sensors/:sensorId/data",k,async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{soilHumidity:r,temperature:u,condutivity:d,ph:f,nitrogen:g,phosphorus:v,potassium:b}=t.body;if(r==null||u==null||d==null||f==null||g==null||v==null||b==null)return e.status(400).json({message:A});let[D]=await i.select().from(o).where(I(a(o.sensorId,s),a(o.userId,n))).execute();if(!D)return e.status(404).json({message:w});await i.insert(h).values({sensorId:s,soilHumidity:r,temperature:u,condutivity:d,ph:f,nitrogen:g,phosphorus:v,potassium:b,dateTime:new Date}).execute();let _={soilHumidity:r,temperature:u,condutivity:d,ph:f,nitrogen:g,phosphorus:v,potassium:b},T=[];for(let x of Object.keys(_)){let j=_[x],{ideal:P,intermediate:H}=Ie[x],E;if(j>=P[0]&&j<=P[1])continue;H.some(([se,te])=>j>=se&&j<=te)?E="Alerta":E="Cr\xEDtico";let V=`${x} fora do intervalo ideal (${j})`;await i.insert(c).values({sensorId:s,message:V,level:E,timestamp:new Date}).execute(),T.push({metric:x,level:E,message:V})}return e.status(201).json({message:"Dados inseridos e alertas gerados",alerts:T})}catch{return p(e,l)}});m.get("/sensors/:sensorId/data",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,[r]=await i.select().from(o).where(I(a(o.sensorId,s),a(o.userId,n))).execute();if(!r)return e.status(404).json({message:w});let u=await i.select().from(h).where(a(h.sensorId,s)).execute();return u.length===0?e.status(404).json({message:q}):e.status(200).json(u)}catch{return p(e,l)}});m.get("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),r=t.userId,[u]=await i.select().from(o).where(I(a(o.sensorId,s),a(o.userId,r))).execute();if(!u)return e.status(404).json({message:w});let[d]=await i.select().from(h).where(I(a(h.sensorDataId,n),a(h.sensorId,s))).execute();return d?e.status(200).json(d):e.status(404).json({message:q})}catch{return p(e,l)}});m.put("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),r=t.userId,{soilHumidity:u,temperature:d,condutivity:f,ph:g,nitrogen:v,phosphorus:b,potassium:D}=t.body,[_]=await i.select().from(o).where(I(a(o.sensorId,s),a(o.userId,r))).execute();return _?(await i.update(h).set({soilHumidity:u,temperature:d,condutivity:f,ph:g,nitrogen:v,phosphorus:b,potassium:D}).where(I(a(h.sensorDataId,n),a(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:q}):e.status(200).json({message:"Dado do sensor atualizado com sucesso"}):e.status(404).json({message:w})}catch{return p(e,l)}});m.delete("/sensors/:sensorId/data/:dataId",async(t,e)=>{try{let s=Number(t.params.sensorId),n=Number(t.params.dataId),r=t.userId;return(await i.delete(h).where(I(a(h.sensorDataId,n),a(h.sensorId,s))).execute()).rowCount===0?e.status(404).json({message:q}):e.status(200).json({message:"Dado do sensor deletado com sucesso"})}catch{return p(e,l)}});m.post("/sensors/:sensorId/alert",async(t,e)=>{try{let s=Number(t.params.sensorId),n=t.userId,{message:r,level:u}=t.body;if(!r||!u)return e.status(400).json({message:A});if(isNaN(s))return e.status(400).json({message:"sensorId inv\xE1lido"});let[d]=await i.select().from(o).where(I(a(o.sensorId,s),a(o.userId,n))).execute();return d?(await i.insert(c).values({sensorId:s,message:r,level:u,timestamp:new Date}).execute(),e.status(201).json({message:"Alerta cadastrado com sucesso"})):e.status(404).json({message:w})}catch{return p(e,l)}});m.get("/sensor/:sensorId/alerts",async(t,e)=>{try{let{sensorId:s}=t.params,n=t.userId,r=Number(s);if(isNaN(r))return e.status(400).json({message:"sensorId invalido"});let[u]=await i.select().from(o).where(I(a(o.sensorId,r),a(o.userId,n))).execute();if(!u)return e.status(404).json({message:w});let d=await i.select().from(c).where(a(c.sensorId,r)).execute();return d.length===0?e.status(404).json({message:"Nenhum alerta encontrado para este sensor"}):e.status(200).json(d)}catch{return p(e,l)}});m.get("/sensors/:sensorId/alerts/:alertId",async(t,e)=>{try{let{sensorId:s,alertId:n}=t.params,r=t.userId,u=Number(s),d=Number(n);if(isNaN(u)||isNaN(d))return e.status(400).json({message:"sensorId ou alertId invalido"});let[f]=await i.select().from(o).where(I(a(o.sensorId,u),a(o.userId,r))).execute();if(!f)return e.status(404).json({message:w});let[g]=await i.select().from(c).where(I(a(c.alertId,d),a(c.sensorId,u))).execute();return g?e.status(200).json(g):e.status(404).json({message:"alerta nao encontrado para este sensor"})}catch{return p(e,l)}});m.put("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,{message:r,level:u}=t.body,d=Number(s);if(isNaN(d))return e.status(400).json({message:"alertId invalido"});if(!r||!u)return e.status(400).json({message:A});let[f]=await i.select().from(c).innerJoin(o,a(c.sensorId,o.sensorId)).where(I(a(c.alertId,d),a(o.userId,n))).execute();return f?(await i.update(c).set({message:r,level:u}).where(a(c.alertId,d)).execute()).rowCount===0?e.status(404).json({message:"Falha ao atualizar o alerta"}):e.status(200).json({message:"Alerta atualizado com sucesso"}):e.status(404).json({message:"Alerta n\xE3o encontrado ou n\xE3o pertence ao usu\xE1rio"})}catch{return p(e,l)}});m.delete("/alert/:alertId",async(t,e)=>{try{let{alertId:s}=t.params,n=t.userId,r=Number(s);if(isNaN(r))return e.status(400).json({message:"alertId invalido"});let[u]=await i.select().from(c).innerJoin(o,a(c.sensorId,o.sensorId)).where(I(a(c.alertId,r),a(o.userId,n))).execute();return u?(await i.delete(c).where(a(c.alertId,r)).execute()).rowCount===0?e.status(404).json({message:"Falha ao deletar o alerta"}):e.status(200).json({message:"Alerta deletado"}):e.status(404).json({message:"Alerta nao encontrado ou nao pertence ao usuario"})}catch{return p(e,l)}});var $=m;import W from"bcrypt";import{eq as G}from"drizzle-orm";import he from"express";import Q from"jsonwebtoken";var B=he.Router(),X=process.env.JWT_SECRET,J="Erro no Servidor, tente novamente",ge="Usu\xE1rio n\xE3o encontrado",fe="Senha incorreta",Re="Email e senha s\xE3o obrigat\xF3rios",ye="Campos obrigat\xF3rios est\xE3o faltando",L=(t,e,s=500)=>(console.error(e),t.status(s).json({message:e}));B.post("/webhook/sensors/data",async(t,e)=>{try{let s=t.query.token;if(!s)return e.status(401).json({message:"Token ausente"});let[n]=await i.select().from(o).where(G(o.webhookToken,s)).execute();if(!n)return e.status(403).json({message:"Token inv\xE1lido"});let{sensor_id:r,soilHumidity:u,level_humidity:d,temperature:f,level_temperature:g,condutivity:v,level_condutivity:b,ph:D,level_ph:_,nitrogen:T,level_nitrogen:x,phosphorus:j,level_phosphorus:P,potassium:H,level_potassium:E}=t.body;return await i.insert(h).values({sensorId:r,soilHumidity:u,levelHumidity:d,temperature:f,levelTemperature:g,condutivity:v,levelCondutivity:b,ph:D,levelPh:_,nitrogen:T,levelNitrogen:x,phosphorus:j,levelPhosphorus:P,potassium:H,levelPotassium:E}).execute(),e.status(201).json({message:"Dados recebidos com sucesso"})}catch{return L(e,J)}});B.post("/register",async(t,e)=>{try{let{name:s,email:n,password:r}=t.body;if(!s||!n||!r)return e.status(400).json({message:ye});let u=await W.genSalt(10),d=await W.hash(r,u),g=(await i.insert(y).values({name:s,email:n,password:d}).returning().execute())[0],v=Q.sign({id:g.userId},X,{expiresIn:"1h"});e.status(201).json({token:v,name:g.name,email:g.email})}catch{L(e,J)}});B.post("/login",async(t,e)=>{try{let{email:s,password:n}=t.body;if(!s||!n)return e.status(400).json({message:Re});let r=await i.select().from(y).where(G(y.email,s)).execute();if(r.length===0)return e.status(404).json({message:ge});if(!await W.compare(n,r[0].password))return e.status(401).json({message:fe});let d=r[0],f=Q.sign({id:d.userId},X,{expiresIn:"1h"});e.status(200).json({token:f,name:d.name,email:d.email})}catch{L(e,J)}});var Y=B;var S=ee();S.use(we());S.use(ee.json());S.use("/api",Y);S.use("/api",k,$);var Z=process.env.PORT||3e3;S.listen(Z,()=>{console.log(`\u2705 API rodando em http://localhost:${Z}/api`)});
